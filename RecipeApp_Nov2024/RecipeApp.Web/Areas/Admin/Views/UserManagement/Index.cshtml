@using RecipeApp.Web.ViewModels.AdminViewModels.UserManagementViewModels
@using Microsoft.AspNetCore.Identity
@model IEnumerable<AllUsersViewModel>

@inject RoleManager<IdentityRole> roleManager

@{
    IEnumerable<string?> allRoles = roleManager.Roles
            .Select(r => r.Name)
            .ToArray();
}

<div class="body-container container mt-5">
    <h1 class="text-center mb-4">User Management</h1>

    <table class="table table-bordered table-hover">
        <thead class="thead-light">
            <tr>
                <th>Email</th>
                <th>Roles</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.Email</td>
                    <td>
                        @foreach (var role in user.Roles)
                        {
                            <span class="badge bg-secondary">@role</span>
                        }
                    </td>
                    <td>
                        <form method="post" asp-action="AssignRole" asp-controller="UserManagement" asp-area="Admin" class="d-inline">
                            <input type="hidden" name="userId" value="@user.Id" />
                            <select name="role" class="form-select d-inline w-auto">
                                @foreach (string role in allRoles)
                                {
                                  <option value="@role">@role</option>
                                }
                            </select>
                            <button type="submit" class="btn btn-primary btn-sm">Assign Role</button>
                        </form>

                        <form method="post" asp-action="RemoveRole" asp-controller="UserManagement" asp-area="Admin" class="d-inline ms-2">
                            <input type="hidden" name="userId" value="@user.Id" />
                            <select name="role" class="form-select d-inline w-auto">
                                @foreach (var role in user.Roles)
                                {
                                    <option value="@role">@role</option>
                                }
                            </select>
                            <button type="submit" class="btn btn-warning btn-sm">Remove Role</button>
                        </form>

                        <form method="post" asp-action="DeleteUser" asp-controller="UserManagement" asp-area="Admin" class="d-inline ms-2">
                            <input type="hidden" name="userId" value="@user.Id" />
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @* Pagination Navigation *@
    @if ((int)ViewData["TotalPages"]! > 1)
    {
        <div class="pagination-container">
            <nav aria-label="Page navigation" class="mt-4">
                <ul class="pagination">
                    @if ((int)ViewData["CurrentPage"]! > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="UserManagement" asp-action="Index"
                               asp-route-pageNumber="@((int)ViewData["CurrentPage"]! - 1)"
                               asp-route-pageSize="@ViewData["PageSize"]">
                                Previous
                            </a>
                        </li>
                    }

                    @for (int i = 1; i <= (int)ViewData["TotalPages"]!; i++)
                    {
                        <li class="page-item @(i == (int)ViewData["CurrentPage"]! ? "active" : "")">
                            <a class="page-link" asp-controller="UserManagement" asp-action="Index"
                               asp-route-pageNumber="@i"
                               asp-route-pageSize="@ViewData["PageSize"]">
                                @i
                            </a>
                        </li>
                    }

                    @if ((int)ViewData["CurrentPage"]! < (int)ViewData["TotalPages"]!)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="UserManagement" asp-action="Index"
                               asp-route-pageNumber="@((int)ViewData["CurrentPage"]! + 1)"
                               asp-route-pageSize="@ViewData["PageSize"]">
                                Next
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>
